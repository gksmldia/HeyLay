<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.planb.dao.ContentDAO">
	
	<select id="selectContents" parameterType="contentsVO" resultType="contentsVO">
		select 
			<include refid="basicColumns" />
			, <include refid="additionalColumns" />
			<if test="memberNo != 0 or savedNo != 0">	<!-- for Saved cards -->
				, <include refid="savedColumns" />
			</if>
		 
	 	from Q_CONTENTS CON
			<include refid="additionalJoin" />
			<if test="memberNo != 0 or savedNo != 0">	<!-- for Saved cards -->
				<include refid="savedJoin" />
			</if>
 			
		<where>
			<if test="contentsNo != 0"> and CON.NO = #{contentsNo}</if>
			<if test="memberNo != 0">and SAV.MEMBER_NO = #{memberNo}</if>
			<if test="savedNo != 0">and SAV.NO = #{savedNo}</if>
 			<if test="sourceNo != 0">and SOU.NO = #{sourceNo}</if>
 			<if test="dataTypeNo != 0">and DAT.NO = #{dataTypeNo}</if>
 			<if test="categoryNo != 0">and CAT.NO = #{categoryNo}</if>
 			<if test="keyword != null">and CON.TITLE ~* #{keyword}</if>
		</where>
 		
 		group by CON.NO
			<include refid="additionalGroup" />
			<if test="memberNo != 0 or savedNo != 0">	<!-- for Saved cards -->
				<include refid="savedGroup" />
			</if>
 		
 		order by
 			<if test="memberNo != 0 or savedNo != 0">	<!-- for Saved cards -->
				SAV.REG_DATE desc,
			</if>
			<if test="limit != 0">						<!-- for Popular List -->
				viewCnt desc,
			</if>
			CON.LAST_SCRAPED desc
		<if test="limit != 0">limit #{limit}</if>				<!-- for Popular List -->
	</select>
	
	<select id="selectPrevContents" parameterType="int" resultType="int">
		select NO as contentsNo
		from Q_CONTENTS
		where BAN = 'N' and NO &lt; #{contentsNo}
		order by NO desc limit 1
	</select>
	
	<select id="selectNextContents" parameterType="int" resultType="int">
		select NO as contentsNo
		from Q_CONTENTS
		where BAN = 'N' and NO &gt; #{contentsNo}
		order by NO asc limit 1
	</select>
	
	<!-- SQL scriptlets -->
	<sql id="daysAgo">
		, case 
		    when ${which_column} &gt; localtimestamp - interval '60 seconds'
				then round( extract( second from age(localtimestamp, ${which_column}) ) )||'초 전' 
		    when ${which_column} &gt; localtimestamp - interval '60 minutes'
				then extract( minute from age(localtimestamp, ${which_column}) )||'분 전'
		    when ${which_column} &gt; localtimestamp - interval '12 hour'
				then extract( hour from age(localtimestamp, ${which_column}) )||'시간 전'
		    when ${which_column} &gt; current_date + time '00:00'
				then '오늘' 
		    when ${which_column} &gt; localtimestamp - interval '1 day'
				then '어제' 
		    else to_char(${which_column}, 'YYYY. MM. DD.')
		end as ${which_name}DaysAgo
	</sql>
	
	<!-- about Contents -->
	<sql id="basicColumns">
		CON.NO as contentsNo
		, CON.TITLE as title, CON.SUMMARY as summary, CON.URL as url
		, CON.LAST_SCRAPED as scrapedDate, CON.BAN as BAN
		<include refid="daysAgo">
			<property name="which_column" value="CON.LAST_SCRAPED"/>
			<property name="which_name" value="scraped"/>
		</include>
	</sql>
	
	<sql id="additionalColumns">
		CON.LANGUAGE as language, CON.BAN as ban
		, sum(VIW.COUNT) as viewCnt, count(LIK.CONTENTS_NO) as likeCnt
		, SOU.NO as sourceNo, SOU.NAME as sourceName, SOU.URL as sourceUrl, SOU.DOMAIN as sourceDomain, SOU.LOGO_IMG as sourceImg
		, DAT.NO as dataTypeNo, DAT.DATA_TYPE as dataTypeName, DAT.DATA_TYPE_ENG as dataTypeNameEng, DAT.FUN_NAME as dataTypeNameFun
		, CAT.NO as categoryNo, CAT.CATEGORY as categoryName
		, IMG.NO as imgNo, IMG.URL as imgUrl, IMG.ALT as imgAlt
	</sql>
	
	<sql id="additionalJoin">
		inner join Q_SOURCE SOU on SOU.NO = CON.SOURCE_NO
		inner join Q_DATA_TYPE DAT on DAT.NO = SOU.DATA_TYPE
		inner join Q_CATEGORY CAT on CAT.NO = CON.CATEGORY_NO
		left join Q_IMAGE IMG on IMG.CONTENTS_NO = CON.NO
		left join Q_LIKE LIK on LIK.CONTENTS_NO = CON.NO
		left join Q_VIEW VIW on VIW.CONTENTS_NO = CON.NO
	</sql>
	
	<sql id="additionalGroup">
		, SOU.NO, CAT.NO, DAT.NO, IMG.NO, VIW.NO
	</sql>
	
	<!-- about Saved Contents -->
 	<sql id="savedColumns">
		SAV.NO as savedNo, count(SAV.CONTENTS_NO) as savedCnt
		, SAV.REG_DATE as savedDate
		<include refid="daysAgo">
			<property name="which_column" value="SAV.REG_DATE"/>
			<property name="which_name" value="saved"/>
		</include>
		, DIR.NO as directoryNo, DIR.NAME as directoryName
	</sql>
	
 	<sql id="savedJoin">
		left join Q_CONTENTS_SAVED SAV on SAV.CONTENTS_NO = CON.NO
		left join Q_DIRECTORY DIR on DIR.NO = SAV.DIRECTORY_NO
	</sql>
	
 	<sql id="savedGroup">
		, SAV.NO, DIR.NO
	</sql>
	
</mapper>
  