<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.planb.contents.dao.ContentDAO">

<!-- 	<sql id="selectId">
		SELECT no, keyword, to_char(reg_date, 'yyyy-mm-dd') regDate, 
				status reportCnt, MEMBER_NO as memberNo
		FROM Q_KEYWORDS
	</sql> -->

 	<select id="selectKeywordList" parameterType="int" resultType="keywordsVO">
		SELECT max(no), keyword, max(reg_date) as regDate
			FROM q_keywords
			WHERE status='Y' and member_no = #{ memberNo }
      		GROUP by keyword
			ORDER BY regDate DESC
			LIMIT 50
	</select> 
	
	<update id="updateStatus" parameterType="keywordsVO">
		UPDATE q_keywords
			SET status='N'
			WHERE no = #{ no } and member_no = #{ memberNo }
	</update>
	
	<insert id="insertCardToSave" parameterType="contentsVO">
		INSERT INTO q_contents_saved (no, member_no, contents_no, directory_no)
		VALUES ( NEXTVAL('q_contents_saved_no'), #{memberNo}, #{contentsNo}, #{directoryNo} )
	</insert>
	
	<!-- <select id="selectByNo" parameterType="int" resultType="memberVO">
		<include refid="selectId" />
		WHERE no = #{ no } 
	</select>
	
	<select id="selectByOption" parameterType="java.lang.String" resultType="memberVO">
		<include refid="selectId" />
		WHERE type = #{ option } 
		ORDER BY no DESC
	</select>
	
	<select id="selectRest" resultType="memberVO">
		<include refid="selectId" />
		WHERE rest = 'Y' 
		ORDER BY no DESC
	</select>
	
	<select id="selectBan" resultType="memberVO">
		<include refid="selectId" />
		WHERE ban = 'Y' 
		ORDER BY no DESC
	</select>
	
	<update id="updateRest" parameterType="memberVO">
		UPDATE q_member
		SET rest = #{ rest } 
		WHERE no = #{ no }
	</update>
	
	<update id="updateBan" parameterType="memberVO">
		UPDATE q_member
		SET ban = #{ ban } 
		WHERE no = #{ no }
	</update>
	
	<select id="countMember" resultType="int">
		SELECT COUNT(*) cnt 
		FROM q_member 
	</select>
	
	<select id="selectWithdraw" resultType="leavedVO">
		SELECT member_no memberNo, reason_select reasonSelect, reason_input reasonInput, reg_date regDate 
		FROM q_leaved 
	</select>
	
	<delete id="deleteMember" parameterType="int">
		DELETE FROM q_member 
		WHERE no = #{ no } 
	</delete> -->
	
	<select id="selectPopularList" resultType="contentsVO">
		SELECT CO.NO contentsNo, CO.TITLE as title, CO.SUMMARY as summary, CO.URL as url 
			, CO.VIEW_CNT as viewCnt 
			, count(SPA.CONTENTS_NO) as reportCnt, count(LIK.CONTENTS_NO) as likeCnt 
			, CO.SOURCE_NO as sourceNo, SO.NAME as sourceName, SO.URL as sourceUrl, SO.LOGO_IMG as logoImg 
		    , CO.CATEGORY_NO as categoryNo, CA.CATEGORY as categoryName 
		    , DAT.DATA_TYPE as dataType 
		FROM Q_CONTENTS CO 
		INNER JOIN Q_CATEGORY CA on CA.NO = CO.CATEGORY_NO 
		INNER JOIN Q_SOURCE SO on SO.NO = CO.SOURCE_NO 
		INNER JOIN Q_DATA_TYPE DAT on DAT.NO = SO.DATA_TYPE 
		LEFT JOIN Q_CONTENTS_SPAM SPA on SPA.CONTENTS_NO = CO.NO 
		LEFT JOIN Q_LIKE LIK on LIK.CONTENTS_NO = CO.NO 
		WHERE co.ban = 'N' 
		GROUP BY CO.NO, CA.NO, SO.NO, DAT.NO 
		ORDER BY co.view_cnt DESC, co.last_scraped DESC 
		LIMIT 3 
	</select>
	
	<select id="selectCustomSourceList" parameterType="int" resultType="contentsVO">
		SELECT CO.NO, CO.TITLE as title, CO.SUMMARY as summary, CO.URL as url
			, CO.VIEW_CNT as viewCnt
			, count(SPA.CONTENTS_NO) as reportCnt, count(LIK.CONTENTS_NO) as likeCnt
			, CO.SOURCE_NO as sourceNo, SO.NAME as sourceName, SO.URL as sourceUrl, SO.LOGO_IMG as logoImg
		    	, CO.CATEGORY_NO as categoryNo, CA.CATEGORY as categoryName
		    	, DAT.DATA_TYPE as dataType
		FROM Q_CONTENTS CO
		INNER JOIN Q_CATEGORY CA on CA.NO = CO.CATEGORY_NO
		INNER JOIN Q_SOURCE SO on SO.NO = CO.SOURCE_NO
		INNER JOIN Q_DATA_TYPE DAT on DAT.NO = SO.DATA_TYPE
		LEFT JOIN Q_CONTENTS_SPAM SPA on SPA.CONTENTS_NO = CO.NO
		LEFT JOIN Q_LIKE LIK on LIK.CONTENTS_NO = CO.NO
		WHERE co.source_no = (SELECT cr.source_no 
		FROM q_contents cr 
		INNER JOIN q_contents_saved cs ON cs.contents_no = cr.no 
		INNER JOIN q_member mm ON mm.no = cs.member_no 
		INNER JOIN q_source ss ON ss.no = cr.source_no 
		WHERE mm.no = #{ no } 
		AND cr.ban = 'N' 
		AND ss.data_type > 0 
		GROUP BY cr.source_no 
		ORDER BY COUNT(cr.source_no) DESC 
		LIMIT 1 ) 
		AND co.ban = 'N' 
		GROUP BY CO.NO, CA.NO, SO.NO, DAT.NO 
		ORDER BY co.view_cnt DESC 
		LIMIT 3 
	</select>
	
	<select id="selectUserKeywordList" parameterType="int" resultType="keywordsVO">
		SELECT LOWER(keyword) keyword
		FROM q_select_keywords sk 
		WHERE member_no = #{ no } 
		UNION DISTINCT 
		SELECT LOWER(keyword) keyword
		FROM q_keywords 
		WHERE member_no = #{ no } 
		AND search_result > 0 
	</select>
	
	<select id="selectCustomCuration" parameterType="String" resultType="contentsVO">
		SELECT CO.NO, CO.TITLE as title, CO.SUMMARY as summary, CO.URL as url
			, CO.VIEW_CNT as viewCnt
			, count(SPA.CONTENTS_NO) as reportCnt, count(LIK.CONTENTS_NO) as likeCnt
			, CO.SOURCE_NO as sourceNo, SO.NAME as sourceName, SO.URL as sourceUrl, SO.LOGO_IMG as logoImg
		    	, CO.CATEGORY_NO as categoryNo, CA.CATEGORY as categoryName
		    	, DAT.DATA_TYPE as dataType
		FROM Q_CONTENTS CO
		INNER JOIN Q_CATEGORY CA on CA.NO = CO.CATEGORY_NO
		INNER JOIN Q_SOURCE SO on SO.NO = CO.SOURCE_NO
		INNER JOIN Q_DATA_TYPE DAT on DAT.NO = SO.DATA_TYPE
		LEFT JOIN Q_CONTENTS_SPAM SPA on SPA.CONTENTS_NO = CO.NO
		LEFT JOIN Q_LIKE LIK on LIK.CONTENTS_NO = CO.NO
		WHERE co.title ~* #{ keywords } 
		AND co.ban = 'N' 
		GROUP BY CO.NO, CA.NO, SO.NO, DAT.NO 
		ORDER BY co.view_cnt DESC 
		LIMIT 3 
	</select>
</mapper>






  