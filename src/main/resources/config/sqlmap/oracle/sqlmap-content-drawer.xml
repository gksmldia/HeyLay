<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="io.planb.contents.dao.ContentDAO">

  	<!-- drawer -->
	<select id="drawerCards" parameterType="int" resultType="contentsVO">
		select CS.NO as savedNo, CS.MEMBER_NO as memberNo
		, CS.CONTENTS_NO as contentsNo, CO.TITLE as title, CO.SUMMARY as summary, CO.URL as url
		, CO.VIEW_CNT as viewCnt
		, count(SAV.CONTENTS_NO) as saveCnt, count(SPA.CONTENTS_NO) as reportCnt, count(LIK.CONTENTS_NO) as likeCnt
		, CS.DIRECTORY_NO as directoryNo, DI.NAME as directoryName
    	, CO.SOURCE_NO as sourceNo, SO.NAME as sourceName, SO.URL as sourceUrl, SO.LOGO_IMG as logoImg
    	, CO.CATEGORY_NO as categoryNo, CA.CATEGORY as categoryName
    	, DAT.DATA_TYPE as dataType
		, to_char(CS.REG_DATE, 'YYYY. MM. DD.') as regDate
		, case 
		    when (CS.REG_DATE at time zone 'GMT+9') &gt; (now() at time zone 'GMT-9')
			then '오늘' 
		    when (CS.REG_DATE at time zone 'GMT+9') &gt; (now() at time zone 'GMT-9' - interval '1 day')
			then '어제' 
		    else to_char(CS.REG_DATE, 'YYYY. MM. DD.') 
		    end as daysAgo
		from Q_CONTENTS_SAVED CS
		inner join Q_CONTENTS CO on CO.NO = CS.CONTENTS_NO
		inner join Q_DIRECTORY DI on DI.NO = CS.DIRECTORY_NO
		inner join Q_CATEGORY CA on CA.NO = CO.CATEGORY_NO
		inner join Q_SOURCE SO on SO.NO = CO.SOURCE_NO
		inner join Q_DATA_TYPE DAT on DAT.NO = SO.DATA_TYPE
		left join Q_CONTENTS_SAVED SAV on SAV.CONTENTS_NO = CS.NO
		left join Q_CONTENTS_SPAM SPA on SPA.CONTENTS_NO = CS.NO
		left join Q_LIKE LIK on LIK.CONTENTS_NO = CS.NO
        where CS.MEMBER_NO = #{memberNo}
        group by CS.NO, CO.NO, DI.NO, CA.NO, SO.NO, DAT.NO
		order by CS.REG_DATE desc, CS.NO desc
	</select>
	
	<select id="drawerDates" parameterType="int" resultType="savedHeaderVO">
		select to_char(REG_DATE, 'YYYY. MM. DD.') as regDate, COUNT(CONTENTS_NO) as cnt
		, case 
		    when (REG_DATE at time zone 'GMT+9') &gt; (now() at time zone 'GMT-9')
			then '오늘' 
		    when (REG_DATE at time zone 'GMT+9') &gt; (now() at time zone 'GMT-9' - interval '1 day')
			then '어제' 
		    else to_char(REG_DATE, 'YYYY. MM. DD.') 
		    end as daysAgo
		from Q_CONTENTS_SAVED 
		where MEMBER_NO = #{memberNo}
		group by regDate, daysAgo
		order by regDate desc
	</select>
	
	<select id="drawerDirectory" parameterType="int" resultType="savedHeaderVO">
		select CS.DIRECTORY_NO, MAX(DI.NAME) as directory, COUNT(CS.DIRECTORY_NO) as cnt
		from Q_CONTENTS_SAVED CS
    	inner join Q_DIRECTORY DI on DI.NO = CS.DIRECTORY_NO
		where CS.MEMBER_NO = #{memberNo}
		group by CS.DIRECTORY_NO
		order by CS.DIRECTORY_NO desc
	</select>
	
	<select id="drawerSource" parameterType="int" resultType="savedHeaderVO">
		select CO.SOURCE_NO, max(SO.NAME) as source, count(CO.SOURCE_NO) as cnt
		from Q_CONTENTS_SAVED CS
    	inner join Q_CONTENTS CO on CO.NO = CS.CONTENTS_NO
		inner join Q_SOURCE SO on SO.NO = CO.SOURCE_NO
		where CS.MEMBER_NO = #{memberNo}
	 	group by CO.SOURCE_NO
		order by CO.SOURCE_NO desc
	</select>
	
	<select id="drawerCategory" parameterType="int" resultType="savedHeaderVO">
		select CO.CATEGORY_NO, max(CA.CATEGORY) as category, count(CO.CATEGORY_NO) as cnt
		from Q_CONTENTS_SAVED CS
    	inner join Q_CONTENTS CO on CO.NO = CS.CONTENTS_NO
		inner join Q_CATEGORY CA on CA.NO = CO.CATEGORY_NO
		where CS.MEMBER_NO = #{memberNo}
		group by CO.CATEGORY_NO
		order by CO.CATEGORY_NO asc
	</select>
  	
</mapper>