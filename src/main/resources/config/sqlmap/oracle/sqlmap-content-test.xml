<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.planb.dao.ContentDAO">
	
	<select id="selectContents" parameterType="int" resultType="contentsVO">
		select CON.NO as contentsNo
			, CON.TITLE as title, CON.SUMMARY as summary, CON.URL as url
			, CON.LAST_SCRAPED as scrapedDate
			<include refid="daysAgo">
				<property name="which_column" value="CON.LAST_SCRAPED"/>
				<property name="which_name" value="scraped"/>
			</include>
			
			<include refid="additionalColumns" />
			<include refid="savedColumns" />
		 
	 	from Q_CONTENTS CON
			<include refid="additionalJoin" />
			<include refid="savedJoin" />
 			
		<where>
 			CON.BAN = 'N'
			and SAV.MEMBER_NO = #{memberNo}
		</where>
 		
 		group by CON.NO
			<include refid="additionalGroup" />
			<include refid="savedGroup" />
 		
 		order by
			SAV.REG_DATE desc,
			CON.LAST_SCRAPED desc
	</select>
	
	<!-- SQL scriptlets -->
	<sql id="daysAgo">
		, case 
		    when ${which_column} &gt; now()
				then '오늘' 
		    when ${which_column} &gt; (now() - interval '1 day')
				then '어제' 
		    else to_char(${which_column}, 'YYYY. MM. DD.')
		end as ${which_name}DaysAgo
	</sql>
	
	<!-- about Contents -->
	<sql id="additionalColumns">
		, CON.LANGUAGE as language, CON.BAN as ban
		, CON.VIEW_CNT as viewCnt, count(LIK.CONTENTS_NO) as likeCnt
		, SOU.NO as sourceNo, SOU.NAME as sourceName, SOU.URL as sourceUrl, SOU.DOMAIN as sourceDomain, SOU.LOGO_IMG as sourceImg
		, DAT.NO as dataTypeNo, DAT.DATA_TYPE as dataTypeName, DAT.DATA_TYPE_ENG as dataTypeNameEng, DAT.FUN_NAME as dataTypeNameFun
		, CAT.NO as categoryNo, CAT.CATEGORY as categoryName
		, IMG.NO as imgNo, IMG.URL as imgUrl, IMG.ALT as imgAlt
	</sql>
	
	<sql id="additionalJoin">
		inner join Q_SOURCE SOU on SOU.NO = CON.SOURCE_NO
		inner join Q_DATA_TYPE DAT on DAT.NO = SOU.DATA_TYPE
		inner join Q_CATEGORY CAT on CAT.NO = CON.CATEGORY_NO
		left join Q_IMAGE IMG on IMG.CONTENTS_NO = CON.NO
		left join Q_LIKE LIK on LIK.CONTENTS_NO = CON.NO
	</sql>
	
	<sql id="additionalGroup">
		, SOU.NO, CAT.NO, DAT.NO, IMG.NO
	</sql>
	
	<!-- about Saved Contents -->
 	<sql id="savedColumns">
		, SAV.NO as savedNo, count(SAV.CONTENTS_NO) as savedCnt
		, SAV.REG_DATE as savedDate
		<include refid="daysAgo">
			<property name="which_column" value="SAV.REG_DATE"/>
			<property name="which_name" value="saved"/>
		</include>
		, DIR.NO as directoryNo, DIR.NAME as directoryName
	</sql>
	
 	<sql id="savedJoin">
		left join Q_CONTENTS_SAVED SAV on SAV.CONTENTS_NO = CON.NO
		left join Q_DIRECTORY DIR on DIR.NO = SAV.DIRECTORY_NO
	</sql>
	
 	<sql id="savedGroup">
		, SAV.NO, DIR.NO
	</sql>
	
</mapper>






  